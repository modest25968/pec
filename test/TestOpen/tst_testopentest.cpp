#include <QString>
#include <QtTest>
#include "../../src/parser/parser.h"
#include "../../src/player/msong.h"

class OpenTest : public QObject
{
    Q_OBJECT
private Q_SLOTS:
    void testNote();
    void testAtr();
    void testXmlParser();
private:
    MSong* pe;
};


void OpenTest::testNote()
{
    XmlParser par;


    QDir d(QDir::current());

    d.cd("../../../pe/test/TestOpen/V1.1");

    par.divisions = 480;//in NotaForTest.xml atr set divisions = 480

    QXmlStreamReader* xml = par.openFile(d.absoluteFilePath("NotaForTest.xml"));
    QVERIFY(!(xml==nullptr));

    Snote note = par.parseNote(*xml, 1.1);
    QCOMPARE(note.dur, 480);
    QCOMPARE(note.voice, 1);
    QCOMPARE(note.midi, 65);
    QCOMPARE(note.oct, 4);
    QVERIFY(par.ok);

    delete xml;
}

void OpenTest::testAtr()
{
    XmlParser par;
    QDir d(QDir::current());
    d.cd("../../../pe/test/TestOpen/V1.1");

    QXmlStreamReader* xml = par.openFile(d.absoluteFilePath("AtrForTest.xml"));
    QVERIFY(!(xml==nullptr));

    Satr atr = par.parseAtr(*xml, 1.1);
    QCOMPARE(atr.divisions, 480);
    QCOMPARE(atr.beats, 4);
    QCOMPARE(atr.beattype, 4);
    QCOMPARE(atr.clef_line, 2);
    QVERIFY(par.ok);

    delete xml;
}

void OpenTest::testXmlParser()
{
    XmlParser par;
    QDir d(QDir::current());
    d.cd("../../../pe/test/TestOpen/V1.1");
    pe = new MSong();
    par.parse(d.absoluteFilePath("SongForTest.xml"), nullptr, pe);

    QCOMPARE(pe->getTempo(), 96);
    QCOMPARE(pe->getDur(), 30720);
    QCOMPARE(pe->getCountVoice(), 4);

    delete pe;

}


QTEST_APPLESS_MAIN(OpenTest)

#include "tst_testopentest.moc"
